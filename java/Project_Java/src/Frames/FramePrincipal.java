/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frames;

import Mis_Clases.Arreglo;
import javax.swing.JOptionPane;

/**
 *
 * @author Mario Salazar
 */
public class FramePrincipal extends javax.swing.JFrame {
    
    private int metodoSeleccionado;
    private Arreglo arreglo;

    /**
     * Creates new form FramePrincipal
     */
    public FramePrincipal() {
        initComponents();
        arreglo = new Arreglo();
        metodoSeleccionado = 0;
        btnOrdenar.setEnabled(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Jlab = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtSinOrdenar = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtOrdenado = new javax.swing.JTextArea();
        lblArregOrdenado = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lblTiempoEjecucion = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        lblLenghtASO = new javax.swing.JLabel();
        lblLenghtAOO = new javax.swing.JLabel();
        lblArregOrdenado1 = new javax.swing.JLabel();
        txtTamanio = new javax.swing.JTextField();
        lblArregOrdenado2 = new javax.swing.JLabel();
        cbmMetodos = new javax.swing.JComboBox<>();
        btnOrdenar = new javax.swing.JButton();
        btnBorrarTodo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 20)); // NOI18N
        jLabel1.setText("Análisis de Algoritmos");

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel2.setText("Proyecto Parcial 1");

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 19)); // NOI18N
        jLabel3.setText("Tiempos estimados de algoritmos de ordenamiento");

        txtSinOrdenar.setColumns(20);
        txtSinOrdenar.setRows(5);
        jScrollPane1.setViewportView(txtSinOrdenar);

        txtOrdenado.setColumns(20);
        txtOrdenado.setRows(5);
        jScrollPane2.setViewportView(txtOrdenado);

        lblArregOrdenado.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        lblArregOrdenado.setText("Arreglo ordenado por el metodo ");

        jLabel5.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        jLabel5.setText("Arreglo de numero Enteros sin ordenar ");

        lblTiempoEjecucion.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        jLabel7.setText("Lenght arreglo:");

        jLabel8.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        jLabel8.setText("Tiempo de ejecución:");

        jLabel9.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        jLabel9.setText("Lenght arreglo:");

        lblLenghtASO.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N

        lblLenghtAOO.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N

        javax.swing.GroupLayout JlabLayout = new javax.swing.GroupLayout(Jlab);
        Jlab.setLayout(JlabLayout);
        JlabLayout.setHorizontalGroup(
            JlabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(JlabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(JlabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JlabLayout.createSequentialGroup()
                        .addComponent(lblArregOrdenado, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(216, 216, 216)
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(lblTiempoEjecucion, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52)
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addComponent(lblLenghtAOO, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(85, Short.MAX_VALUE))
                    .addGroup(JlabLayout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(lblLenghtASO, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(84, 84, 84))))
            .addComponent(jScrollPane2)
        );
        JlabLayout.setVerticalGroup(
            JlabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JlabLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(JlabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(JlabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblLenghtASO, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(JlabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JlabLayout.createSequentialGroup()
                        .addGap(0, 3, Short.MAX_VALUE)
                        .addComponent(lblArregOrdenado, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblTiempoEjecucion, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(JlabLayout.createSequentialGroup()
                        .addGroup(JlabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblLenghtAOO, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );

        lblArregOrdenado1.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        lblArregOrdenado1.setText("Elegir el metodo de Ordenamiento:");

        lblArregOrdenado2.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        lblArregOrdenado2.setText("Ingresar el numero de elementos:");

        cbmMetodos.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        cbmMetodos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Burbuja", "Inserción", "Casilleros", "Cuentas", "Mezcla", "Radix", "Shell", "Selección", "Montículos", "Quicksort" }));
        cbmMetodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbmMetodosActionPerformed(evt);
            }
        });

        btnOrdenar.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        btnOrdenar.setText("Ordenar Arreglo");
        btnOrdenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrdenarActionPerformed(evt);
            }
        });

        btnBorrarTodo.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        btnBorrarTodo.setText("Borrar Todo");
        btnBorrarTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarTodoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(489, 489, 489)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(469, 469, 469)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(360, 360, 360)
                        .addComponent(jLabel3))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(24, 24, 24)
                            .addComponent(lblArregOrdenado2, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(33, 33, 33)
                            .addComponent(txtTamanio, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblArregOrdenado1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(cbmMetodos, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(35, 35, 35)
                            .addComponent(btnOrdenar)
                            .addGap(35, 35, 35)
                            .addComponent(btnBorrarTodo, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(Jlab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBorrarTodo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblArregOrdenado1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtTamanio, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblArregOrdenado2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cbmMetodos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnOrdenar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Jlab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbmMetodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbmMetodosActionPerformed
        // TODO add your handling code here:
        metodoSeleccionado = cbmMetodos.getSelectedIndex();
        System.out.println("" + metodoSeleccionado);
        txtOrdenado.setText("");
        lblTiempoEjecucion.setText("");
        lblLenghtAOO.setText("");
    }//GEN-LAST:event_cbmMetodosActionPerformed

    private void btnOrdenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrdenarActionPerformed
        txtOrdenado.setText("");
        txtSinOrdenar.setText("");
        String archivo = "Arreglo.txt";
        if (txtTamanio.getText().length() > 1 && metodoSeleccionado != -1&& !txtTamanio.getText().equals("")) {
            switch (metodoSeleccionado) {
                case 0:
                    int[] arregloSinOrdenar0 = arreglo.ArregloArchivoTexto(archivo, Integer.parseInt(txtTamanio.getText()));
                    txtSinOrdenar.append(arreglo.ImprimirArreglo(arregloSinOrdenar0));
                    long inicio0 = System.nanoTime();
                    int[] arregloOrdenado0 = arreglo.OrdenamientoBurbuja(arregloSinOrdenar0);
                    long fin0 = System.nanoTime();
                    double tiempoTotal0 = (double) (fin0 - inicio0) * 1.0e-9;
                    txtOrdenado.append(arreglo.ImprimirArreglo(arregloOrdenado0));
                    lblTiempoEjecucion.setText("" + tiempoTotal0 + " segundos");
                    lblLenghtAOO.setText("" + arregloOrdenado0.length);
                    break;
                case 1:
                    int[] arregloSinOrdenar1 = arreglo.ArregloArchivoTexto(archivo, Integer.parseInt(txtTamanio.getText()));
                    txtSinOrdenar.append(arreglo.ImprimirArreglo(arregloSinOrdenar1));
                    long inicio1 = System.nanoTime();
                    int[] arregloOrdenado1 = arreglo.OrdenamientoInsercion(arregloSinOrdenar1);
                    long fin1 = System.nanoTime();
                    double tiempoTotal1 = (double) (fin1 - inicio1) * 1.0e-9;
                    txtOrdenado.append(arreglo.ImprimirArreglo(arregloOrdenado1));
                    lblTiempoEjecucion.setText("" + tiempoTotal1 + " segundos");
                    lblLenghtAOO.setText("" + arregloOrdenado1.length);
                    break;
                case 2:
                    int[] arregloSinOrdenar2 = arreglo.ArregloArchivoTexto(archivo, Integer.parseInt(txtTamanio.getText()));
                    txtSinOrdenar.append(arreglo.ImprimirArreglo(arregloSinOrdenar2));
                    long inicio2 = System.nanoTime();
                    int[] arregloOrdenado2 = arreglo.OrdenamientoBuckSort(arregloSinOrdenar2);
                    long fin2 = System.nanoTime();
                    double tiempoTotal2 = (double) (fin2 - inicio2) * 1.0e-9;
                    txtOrdenado.append(arreglo.ImprimirArreglo(arregloOrdenado2));
                    lblTiempoEjecucion.setText("" + tiempoTotal2 + " segundos");
                    lblLenghtAOO.setText("" + arregloOrdenado2.length);
                    break;
                case 3:
                    int[] arregloSinOrdenar3 = arreglo.ArregloArchivoTexto(archivo, Integer.parseInt(txtTamanio.getText()));
                    txtSinOrdenar.append(arreglo.ImprimirArreglo(arregloSinOrdenar3));
                    long inicio3 = System.nanoTime();
                    int[] arregloOrdenado3 = arreglo.OrdenamientoCuentas(arregloSinOrdenar3);
                    long fin3 = System.nanoTime();
                    double tiempoTotal3 = (double) (fin3 - inicio3) * 1.0e-9;
                    txtOrdenado.append(arreglo.ImprimirArreglo(arregloOrdenado3));
                    lblTiempoEjecucion.setText("" + tiempoTotal3 + " segundos");
                    lblLenghtAOO.setText("" + arregloOrdenado3.length);
                    break;
                case 4:
                    int[] arregloSinOrdenar4 = arreglo.ArregloArchivoTexto(archivo, Integer.parseInt(txtTamanio.getText()));
                    txtSinOrdenar.append(arreglo.ImprimirArreglo(arregloSinOrdenar4));
                    long inicio4 = System.nanoTime();
                    int[] arregloOrdenado4 = arreglo.OrdenamientoMergeSort(arregloSinOrdenar4);
                    long fin4 = System.nanoTime();
                    double tiempoTotal4 = (double) (fin4 - inicio4) * 1.0e-9;
                    txtOrdenado.append(arreglo.ImprimirArreglo(arregloOrdenado4));
                    lblTiempoEjecucion.setText("" + tiempoTotal4 + " segundos");
                    lblLenghtAOO.setText("" + arregloOrdenado4.length);
                    break;
                case 5:
                    int[] arregloSinOrdenar5 = arreglo.ArregloArchivoTexto(archivo, Integer.parseInt(txtTamanio.getText()));
                    txtSinOrdenar.append(arreglo.ImprimirArreglo(arregloSinOrdenar5));
                    long inicio5 = System.nanoTime();
                    int[] arregloOrdenado5 = arreglo.OrdenamientoRadixSort(arregloSinOrdenar5);
                    long fin5 = System.nanoTime();
                    double tiempoTotal5 = (double) (fin5 - inicio5) * 1.0e-9;
                    txtOrdenado.append(arreglo.ImprimirArreglo(arregloOrdenado5));
                    lblTiempoEjecucion.setText("" + tiempoTotal5 + " segundos");
                    lblLenghtAOO.setText("" + arregloOrdenado5.length);
                    break;
                case 6:
                    int[] arregloSinOrdenar6 = arreglo.ArregloArchivoTexto(archivo, Integer.parseInt(txtTamanio.getText()));
                    txtSinOrdenar.append(arreglo.ImprimirArreglo(arregloSinOrdenar6));
                    long inicio6 = System.nanoTime();
                    int[] arregloOrdenado6 = arreglo.OrdenamientoShell(arregloSinOrdenar6);
                    long fin6 = System.nanoTime();
                    double tiempoTotal6 = (double) (fin6 - inicio6) * 1.0e-9;
                    txtOrdenado.append(arreglo.ImprimirArreglo(arregloOrdenado6));
                    lblTiempoEjecucion.setText("" + tiempoTotal6 + " segundos");
                    lblLenghtAOO.setText("" + arregloOrdenado6.length);
                    break;
                case 7:
                    int[] arregloSinOrdenar7 = arreglo.ArregloArchivoTexto(archivo, Integer.parseInt(txtTamanio.getText()));
                    txtSinOrdenar.append(arreglo.ImprimirArreglo(arregloSinOrdenar7));
                    long inicio7 = System.nanoTime();
                    int[] arregloOrdenado7 = arreglo.OrdenamientoSeleccion(arregloSinOrdenar7);
                    long fin7 = System.nanoTime();
                    double tiempoTotal7 = (double) (fin7 - inicio7) * 1.0e-9;
                    txtOrdenado.append(arreglo.ImprimirArreglo(arregloOrdenado7));
                    lblTiempoEjecucion.setText("" + tiempoTotal7 + " segundos");
                    lblLenghtAOO.setText("" + arregloOrdenado7.length);
                    break;
                case 8:
                    int[] arregloSinOrdenar8 = arreglo.ArregloArchivoTexto(archivo, Integer.parseInt(txtTamanio.getText()));
                    txtSinOrdenar.append(arreglo.ImprimirArreglo(arregloSinOrdenar8));
                    long inicio8 = System.nanoTime();
                    int[] arregloOrdenado8 = arreglo.OrdenamientoHeapSort(arregloSinOrdenar8);
                    long fin8 = System.nanoTime();
                    double tiempoTotal8 = (double) (fin8 - inicio8) * 1.0e-9;
                    txtOrdenado.append(arreglo.ImprimirArreglo(arregloOrdenado8));
                    lblTiempoEjecucion.setText("" + tiempoTotal8 + " segundos");
                    lblLenghtAOO.setText("" + arregloOrdenado8.length);
                    break;
                case 9:
                    int[] arregloSinOrdenar9 = arreglo.ArregloArchivoTexto(archivo, Integer.parseInt(txtTamanio.getText()));
                    txtSinOrdenar.append(arreglo.ImprimirArreglo(arregloSinOrdenar9));
                    long inicio9 = System.nanoTime();
                    int[] arregloOrdenado9 = arreglo.OrdenamientoQuickSort(arregloSinOrdenar9);
                    long fin9 = System.nanoTime();
                    double tiempoTotal9 = (double) (fin9 - inicio9) * 1.0e-9;
                    txtOrdenado.append(arreglo.ImprimirArreglo(arregloOrdenado9));
                    lblTiempoEjecucion.setText("" + tiempoTotal9 + " segundos");
                    lblLenghtAOO.setText("" + arregloOrdenado9.length);
                    break;
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "Ingrese el numero valido para los elementos!!");
        }
    }//GEN-LAST:event_btnOrdenarActionPerformed

    private void btnBorrarTodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarTodoActionPerformed
        // TODO add your handling code here:
        txtSinOrdenar.setText("");
        txtOrdenado.setText("");
        lblLenghtASO.setText("");
        lblLenghtAOO.setText("");
        txtTamanio.setText("");
        lblTiempoEjecucion.setText("");
    }//GEN-LAST:event_btnBorrarTodoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FramePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FramePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FramePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FramePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FramePrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Jlab;
    private javax.swing.JButton btnBorrarTodo;
    private javax.swing.JButton btnOrdenar;
    private javax.swing.JComboBox<String> cbmMetodos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblArregOrdenado;
    private javax.swing.JLabel lblArregOrdenado1;
    private javax.swing.JLabel lblArregOrdenado2;
    private javax.swing.JLabel lblLenghtAOO;
    private javax.swing.JLabel lblLenghtASO;
    private javax.swing.JLabel lblTiempoEjecucion;
    private javax.swing.JTextArea txtOrdenado;
    private javax.swing.JTextArea txtSinOrdenar;
    private javax.swing.JTextField txtTamanio;
    // End of variables declaration//GEN-END:variables
}
